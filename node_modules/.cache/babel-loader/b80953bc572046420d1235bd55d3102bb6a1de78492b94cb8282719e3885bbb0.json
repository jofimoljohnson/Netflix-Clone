{"ast":null,"code":"var _jsxFileName = \"/home/jofimol/Desktop/React-uvaiz/Netflix clone/netflix/src/components/Row.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport instance from \"./Instance\";\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(fetchUrl);\n      setMovies(request.data.results);\n    }\n    fetchData();\n  }, []);\n  console.log(\"movie data is \", movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row_poster\",\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.b}`,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","instance","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","log","map","movie","poster_path","b","name"],"sources":["/home/jofimol/Desktop/React-uvaiz/Netflix clone/netflix/src/components/Row.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport instance from \"./Instance\";\nimport './Row.css'\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl,isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await instance.get(fetchUrl);\n            setMovies(request.data.results);\n        }\n        fetchData();\n    }, []);\n\n    console.log(\"movie data is \", movies);\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n\n{movies.map((movie)=>(\n    <img className=\"row_poster\"\n    src={`${base_url}${isLargeRow ?movie.poster_path: movie.b}`}\n \n alt={movie.name}\n    />\n))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,WAAW;AAAA;AAClB,MAAMC,QAAQ,GAAG,sCAAsC;AAEvD,SAASC,GAAG,OAAiC;EAAA;EAAA,IAAhC;IAAEC,KAAK;IAAEC,QAAQ;IAACC;EAAW,CAAC;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,eAAeS,SAAS,GAAG;MACvB,MAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACU,GAAG,CAACN,QAAQ,CAAC;MAC5CG,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;IACnC;IACAJ,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAENK,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,MAAM,CAAC;EAErC,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAKH;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAK,SAAS,EAAC,aAAa;MAAA,UAEvCG,MAAM,CAACS,GAAG,CAAEC,KAAK,iBACd;QAAK,SAAS,EAAC,YAAY;QAC3B,GAAG,EAAG,GAAEf,QAAS,GAAEI,UAAU,GAAEW,KAAK,CAACC,WAAW,GAAED,KAAK,CAACE,CAAE,EAAE;QAE/D,GAAG,EAAEF,KAAK,CAACG;MAAK;QAAA;QAAA;QAAA;MAAA,QAEhB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEgB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA7BQjB,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}